// <auto-generated />
using System;
using System.Reflection;
using Global.Sources.ValueObjects.Converters;
using Global.Sources.ValueObjects.Values;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Modulo.Comprobante.Registros.Domain.Entities;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Modulo.Comprobante.Registros.Persistence.CompiledEntities
{
    [EntityFrameworkInternal]
    public partial class ComprobanteRegistroEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Modulo.Comprobante.Registros.Domain.Entities.ComprobanteRegistro",
                typeof(ComprobanteRegistro),
                baseEntityType,
                propertyCount: 6,
                unnamedIndexCount: 1,
                keyCount: 1);

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(UlidObject),
                propertyInfo: typeof(ComprobanteRegistro).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ComprobanteRegistro).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 26,
                valueConverter: new UlidObjectConverter());
            id.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

            var creadoEnUtc = runtimeEntityType.AddProperty(
                "CreadoEnUtc",
                typeof(DateTimeOffset),
                propertyInfo: typeof(ComprobanteRegistro).GetProperty("CreadoEnUtc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ComprobanteRegistro).GetField("<CreadoEnUtc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)));
            creadoEnUtc.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

            var itbis18 = runtimeEntityType.AddProperty(
                "Itbis18",
                typeof(DecimalObject),
                propertyInfo: typeof(ComprobanteRegistro).GetProperty("Itbis18", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ComprobanteRegistro).GetField("<Itbis18>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                precision: 16,
                scale: 2,
                valueConverter: new DecimalObjectConverter());
            itbis18.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

            var monto = runtimeEntityType.AddProperty(
                "Monto",
                typeof(DecimalObject),
                propertyInfo: typeof(ComprobanteRegistro).GetProperty("Monto", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ComprobanteRegistro).GetField("<Monto>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                precision: 16,
                scale: 2,
                valueConverter: new DecimalObjectConverter());
            monto.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

            var nCF = runtimeEntityType.AddProperty(
                "NCF",
                typeof(StringObject),
                propertyInfo: typeof(ComprobanteRegistro).GetProperty("NCF", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ComprobanteRegistro).GetField("<NCF>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 11,
                valueConverter: new StringObjectConverter());
            nCF.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

            var perfilContribuyenteId = runtimeEntityType.AddProperty(
                "PerfilContribuyenteId",
                typeof(UlidObject),
                propertyInfo: typeof(ComprobanteRegistro).GetProperty("PerfilContribuyenteId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ComprobanteRegistro).GetField("<PerfilContribuyenteId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 26,
                valueConverter: new UlidObjectConverter());
            perfilContribuyenteId.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { id });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { perfilContribuyenteId, nCF, monto });

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", "comprobantes");
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "ComprobanteRegistro");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
